// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class PlotTransfer extends ethereum.Event {
  get params(): PlotTransfer__Params {
    return new PlotTransfer__Params(this);
  }
}

export class PlotTransfer__Params {
  _event: PlotTransfer;

  constructor(event: PlotTransfer) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get plotId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get pods(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class PodApproval extends ethereum.Event {
  get params(): PodApproval__Params {
    return new PodApproval__Params(this);
  }
}

export class PodApproval__Params {
  _event: PodApproval;

  constructor(event: PodApproval) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get spender(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get pods(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class PodListingCancelled extends ethereum.Event {
  get params(): PodListingCancelled__Params {
    return new PodListingCancelled__Params(this);
  }
}

export class PodListingCancelled__Params {
  _event: PodListingCancelled;

  constructor(event: PodListingCancelled) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get index(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class PodListingCreated extends ethereum.Event {
  get params(): PodListingCreated__Params {
    return new PodListingCreated__Params(this);
  }
}

export class PodListingCreated__Params {
  _event: PodListingCreated;

  constructor(event: PodListingCreated) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get index(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get start(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get pricePerPod(): i32 {
    return this._event.parameters[4].value.toI32();
  }

  get maxHarvestableIndex(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get toWallet(): boolean {
    return this._event.parameters[6].value.toBoolean();
  }
}

export class PodListingFilled extends ethereum.Event {
  get params(): PodListingFilled__Params {
    return new PodListingFilled__Params(this);
  }
}

export class PodListingFilled__Params {
  _event: PodListingFilled;

  constructor(event: PodListingFilled) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get index(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get start(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class PodOrderCancelled extends ethereum.Event {
  get params(): PodOrderCancelled__Params {
    return new PodOrderCancelled__Params(this);
  }
}

export class PodOrderCancelled__Params {
  _event: PodOrderCancelled;

  constructor(event: PodOrderCancelled) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get orderId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class PodOrderCreated extends ethereum.Event {
  get params(): PodOrderCreated__Params {
    return new PodOrderCreated__Params(this);
  }
}

export class PodOrderCreated__Params {
  _event: PodOrderCreated;

  constructor(event: PodOrderCreated) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get orderId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get pricePerPod(): i32 {
    return this._event.parameters[3].value.toI32();
  }

  get maxPlaceInLine(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class PodOrderFilled extends ethereum.Event {
  get params(): PodOrderFilled__Params {
    return new PodOrderFilled__Params(this);
  }
}

export class PodOrderFilled__Params {
  _event: PodOrderFilled;

  constructor(event: PodOrderFilled) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get orderId(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get index(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get start(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class MarketplaceFacet__claimAndCreatePodOrderInputClaimStruct extends ethereum.Tuple {
  get topcornWithdrawals(): Array<BigInt> {
    return this[0].toBigIntArray();
  }

  get lpWithdrawals(): Array<BigInt> {
    return this[1].toBigIntArray();
  }

  get plots(): Array<BigInt> {
    return this[2].toBigIntArray();
  }

  get claimBnb(): boolean {
    return this[3].toBoolean();
  }

  get convertLP(): boolean {
    return this[4].toBoolean();
  }

  get minTopcornAmount(): BigInt {
    return this[5].toBigInt();
  }

  get minBNBAmount(): BigInt {
    return this[6].toBigInt();
  }

  get toWallet(): boolean {
    return this[7].toBoolean();
  }
}

export class MarketplaceFacet extends ethereum.SmartContract {
  static bind(address: Address): MarketplaceFacet {
    return new MarketplaceFacet("MarketplaceFacet", address);
  }

  allowancePods(owner: Address, spender: Address): BigInt {
    let result = super.call(
      "allowancePods",
      "allowancePods(address,address):(uint256)",
      [ethereum.Value.fromAddress(owner), ethereum.Value.fromAddress(spender)]
    );

    return result[0].toBigInt();
  }

  try_allowancePods(
    owner: Address,
    spender: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "allowancePods",
      "allowancePods(address,address):(uint256)",
      [ethereum.Value.fromAddress(owner), ethereum.Value.fromAddress(spender)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  claimAndCreatePodOrder(
    topcornAmount: BigInt,
    pricePerPod: i32,
    maxPlaceInLine: BigInt,
    claim: MarketplaceFacet__claimAndCreatePodOrderInputClaimStruct
  ): Bytes {
    let result = super.call(
      "claimAndCreatePodOrder",
      "claimAndCreatePodOrder(uint256,uint24,uint232,(uint32[],uint32[],uint256[],bool,bool,uint256,uint256,bool)):(bytes32)",
      [
        ethereum.Value.fromUnsignedBigInt(topcornAmount),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(pricePerPod)),
        ethereum.Value.fromUnsignedBigInt(maxPlaceInLine),
        ethereum.Value.fromTuple(claim)
      ]
    );

    return result[0].toBytes();
  }

  try_claimAndCreatePodOrder(
    topcornAmount: BigInt,
    pricePerPod: i32,
    maxPlaceInLine: BigInt,
    claim: MarketplaceFacet__claimAndCreatePodOrderInputClaimStruct
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "claimAndCreatePodOrder",
      "claimAndCreatePodOrder(uint256,uint24,uint232,(uint32[],uint32[],uint256[],bool,bool,uint256,uint256,bool)):(bytes32)",
      [
        ethereum.Value.fromUnsignedBigInt(topcornAmount),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(pricePerPod)),
        ethereum.Value.fromUnsignedBigInt(maxPlaceInLine),
        ethereum.Value.fromTuple(claim)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  createPodOrder(
    topcornAmount: BigInt,
    pricePerPod: i32,
    maxPlaceInLine: BigInt
  ): Bytes {
    let result = super.call(
      "createPodOrder",
      "createPodOrder(uint256,uint24,uint256):(bytes32)",
      [
        ethereum.Value.fromUnsignedBigInt(topcornAmount),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(pricePerPod)),
        ethereum.Value.fromUnsignedBigInt(maxPlaceInLine)
      ]
    );

    return result[0].toBytes();
  }

  try_createPodOrder(
    topcornAmount: BigInt,
    pricePerPod: i32,
    maxPlaceInLine: BigInt
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "createPodOrder",
      "createPodOrder(uint256,uint24,uint256):(bytes32)",
      [
        ethereum.Value.fromUnsignedBigInt(topcornAmount),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(pricePerPod)),
        ethereum.Value.fromUnsignedBigInt(maxPlaceInLine)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  podListing(index: BigInt): Bytes {
    let result = super.call("podListing", "podListing(uint256):(bytes32)", [
      ethereum.Value.fromUnsignedBigInt(index)
    ]);

    return result[0].toBytes();
  }

  try_podListing(index: BigInt): ethereum.CallResult<Bytes> {
    let result = super.tryCall("podListing", "podListing(uint256):(bytes32)", [
      ethereum.Value.fromUnsignedBigInt(index)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  podOrder(account: Address, pricePerPod: i32, maxPlaceInLine: BigInt): BigInt {
    let result = super.call(
      "podOrder",
      "podOrder(address,uint24,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(account),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(pricePerPod)),
        ethereum.Value.fromUnsignedBigInt(maxPlaceInLine)
      ]
    );

    return result[0].toBigInt();
  }

  try_podOrder(
    account: Address,
    pricePerPod: i32,
    maxPlaceInLine: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "podOrder",
      "podOrder(address,uint24,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(account),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(pricePerPod)),
        ethereum.Value.fromUnsignedBigInt(maxPlaceInLine)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  podOrderById(id: Bytes): BigInt {
    let result = super.call("podOrderById", "podOrderById(bytes32):(uint256)", [
      ethereum.Value.fromFixedBytes(id)
    ]);

    return result[0].toBigInt();
  }

  try_podOrderById(id: Bytes): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "podOrderById",
      "podOrderById(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(id)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ApprovePodsCall extends ethereum.Call {
  get inputs(): ApprovePodsCall__Inputs {
    return new ApprovePodsCall__Inputs(this);
  }

  get outputs(): ApprovePodsCall__Outputs {
    return new ApprovePodsCall__Outputs(this);
  }
}

export class ApprovePodsCall__Inputs {
  _call: ApprovePodsCall;

  constructor(call: ApprovePodsCall) {
    this._call = call;
  }

  get spender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ApprovePodsCall__Outputs {
  _call: ApprovePodsCall;

  constructor(call: ApprovePodsCall) {
    this._call = call;
  }
}

export class BuyTopcornsAndCreatePodOrderCall extends ethereum.Call {
  get inputs(): BuyTopcornsAndCreatePodOrderCall__Inputs {
    return new BuyTopcornsAndCreatePodOrderCall__Inputs(this);
  }

  get outputs(): BuyTopcornsAndCreatePodOrderCall__Outputs {
    return new BuyTopcornsAndCreatePodOrderCall__Outputs(this);
  }
}

export class BuyTopcornsAndCreatePodOrderCall__Inputs {
  _call: BuyTopcornsAndCreatePodOrderCall;

  constructor(call: BuyTopcornsAndCreatePodOrderCall) {
    this._call = call;
  }

  get topcornAmount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get buyTopcornAmount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get pricePerPod(): i32 {
    return this._call.inputValues[2].value.toI32();
  }

  get maxPlaceInLine(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class BuyTopcornsAndCreatePodOrderCall__Outputs {
  _call: BuyTopcornsAndCreatePodOrderCall;

  constructor(call: BuyTopcornsAndCreatePodOrderCall) {
    this._call = call;
  }

  get id(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class BuyTopcornsAndFillPodListingCall extends ethereum.Call {
  get inputs(): BuyTopcornsAndFillPodListingCall__Inputs {
    return new BuyTopcornsAndFillPodListingCall__Inputs(this);
  }

  get outputs(): BuyTopcornsAndFillPodListingCall__Outputs {
    return new BuyTopcornsAndFillPodListingCall__Outputs(this);
  }
}

export class BuyTopcornsAndFillPodListingCall__Inputs {
  _call: BuyTopcornsAndFillPodListingCall;

  constructor(call: BuyTopcornsAndFillPodListingCall) {
    this._call = call;
  }

  get l(): BuyTopcornsAndFillPodListingCallLStruct {
    return changetype<BuyTopcornsAndFillPodListingCallLStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get topcornAmount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get buyTopcornAmount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class BuyTopcornsAndFillPodListingCall__Outputs {
  _call: BuyTopcornsAndFillPodListingCall;

  constructor(call: BuyTopcornsAndFillPodListingCall) {
    this._call = call;
  }
}

export class BuyTopcornsAndFillPodListingCallLStruct extends ethereum.Tuple {
  get account(): Address {
    return this[0].toAddress();
  }

  get index(): BigInt {
    return this[1].toBigInt();
  }

  get start(): BigInt {
    return this[2].toBigInt();
  }

  get amount(): BigInt {
    return this[3].toBigInt();
  }

  get pricePerPod(): i32 {
    return this[4].toI32();
  }

  get maxHarvestableIndex(): BigInt {
    return this[5].toBigInt();
  }

  get toWallet(): boolean {
    return this[6].toBoolean();
  }
}

export class CancelPodListingCall extends ethereum.Call {
  get inputs(): CancelPodListingCall__Inputs {
    return new CancelPodListingCall__Inputs(this);
  }

  get outputs(): CancelPodListingCall__Outputs {
    return new CancelPodListingCall__Outputs(this);
  }
}

export class CancelPodListingCall__Inputs {
  _call: CancelPodListingCall;

  constructor(call: CancelPodListingCall) {
    this._call = call;
  }

  get index(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CancelPodListingCall__Outputs {
  _call: CancelPodListingCall;

  constructor(call: CancelPodListingCall) {
    this._call = call;
  }
}

export class CancelPodOrderCall extends ethereum.Call {
  get inputs(): CancelPodOrderCall__Inputs {
    return new CancelPodOrderCall__Inputs(this);
  }

  get outputs(): CancelPodOrderCall__Outputs {
    return new CancelPodOrderCall__Outputs(this);
  }
}

export class CancelPodOrderCall__Inputs {
  _call: CancelPodOrderCall;

  constructor(call: CancelPodOrderCall) {
    this._call = call;
  }

  get pricePerPod(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get maxPlaceInLine(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get toWallet(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }
}

export class CancelPodOrderCall__Outputs {
  _call: CancelPodOrderCall;

  constructor(call: CancelPodOrderCall) {
    this._call = call;
  }
}

export class ClaimAndCreatePodOrderCall extends ethereum.Call {
  get inputs(): ClaimAndCreatePodOrderCall__Inputs {
    return new ClaimAndCreatePodOrderCall__Inputs(this);
  }

  get outputs(): ClaimAndCreatePodOrderCall__Outputs {
    return new ClaimAndCreatePodOrderCall__Outputs(this);
  }
}

export class ClaimAndCreatePodOrderCall__Inputs {
  _call: ClaimAndCreatePodOrderCall;

  constructor(call: ClaimAndCreatePodOrderCall) {
    this._call = call;
  }

  get topcornAmount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get pricePerPod(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get maxPlaceInLine(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get claim(): ClaimAndCreatePodOrderCallClaimStruct {
    return changetype<ClaimAndCreatePodOrderCallClaimStruct>(
      this._call.inputValues[3].value.toTuple()
    );
  }
}

export class ClaimAndCreatePodOrderCall__Outputs {
  _call: ClaimAndCreatePodOrderCall;

  constructor(call: ClaimAndCreatePodOrderCall) {
    this._call = call;
  }

  get id(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class ClaimAndCreatePodOrderCallClaimStruct extends ethereum.Tuple {
  get topcornWithdrawals(): Array<BigInt> {
    return this[0].toBigIntArray();
  }

  get lpWithdrawals(): Array<BigInt> {
    return this[1].toBigIntArray();
  }

  get plots(): Array<BigInt> {
    return this[2].toBigIntArray();
  }

  get claimBnb(): boolean {
    return this[3].toBoolean();
  }

  get convertLP(): boolean {
    return this[4].toBoolean();
  }

  get minTopcornAmount(): BigInt {
    return this[5].toBigInt();
  }

  get minBNBAmount(): BigInt {
    return this[6].toBigInt();
  }

  get toWallet(): boolean {
    return this[7].toBoolean();
  }
}

export class ClaimAndFillPodListingCall extends ethereum.Call {
  get inputs(): ClaimAndFillPodListingCall__Inputs {
    return new ClaimAndFillPodListingCall__Inputs(this);
  }

  get outputs(): ClaimAndFillPodListingCall__Outputs {
    return new ClaimAndFillPodListingCall__Outputs(this);
  }
}

export class ClaimAndFillPodListingCall__Inputs {
  _call: ClaimAndFillPodListingCall;

  constructor(call: ClaimAndFillPodListingCall) {
    this._call = call;
  }

  get l(): ClaimAndFillPodListingCallLStruct {
    return changetype<ClaimAndFillPodListingCallLStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get topcornAmount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get claim(): ClaimAndFillPodListingCallClaimStruct {
    return changetype<ClaimAndFillPodListingCallClaimStruct>(
      this._call.inputValues[2].value.toTuple()
    );
  }
}

export class ClaimAndFillPodListingCall__Outputs {
  _call: ClaimAndFillPodListingCall;

  constructor(call: ClaimAndFillPodListingCall) {
    this._call = call;
  }
}

export class ClaimAndFillPodListingCallLStruct extends ethereum.Tuple {
  get account(): Address {
    return this[0].toAddress();
  }

  get index(): BigInt {
    return this[1].toBigInt();
  }

  get start(): BigInt {
    return this[2].toBigInt();
  }

  get amount(): BigInt {
    return this[3].toBigInt();
  }

  get pricePerPod(): i32 {
    return this[4].toI32();
  }

  get maxHarvestableIndex(): BigInt {
    return this[5].toBigInt();
  }

  get toWallet(): boolean {
    return this[6].toBoolean();
  }
}

export class ClaimAndFillPodListingCallClaimStruct extends ethereum.Tuple {
  get topcornWithdrawals(): Array<BigInt> {
    return this[0].toBigIntArray();
  }

  get lpWithdrawals(): Array<BigInt> {
    return this[1].toBigIntArray();
  }

  get plots(): Array<BigInt> {
    return this[2].toBigIntArray();
  }

  get claimBnb(): boolean {
    return this[3].toBoolean();
  }

  get convertLP(): boolean {
    return this[4].toBoolean();
  }

  get minTopcornAmount(): BigInt {
    return this[5].toBigInt();
  }

  get minBNBAmount(): BigInt {
    return this[6].toBigInt();
  }

  get toWallet(): boolean {
    return this[7].toBoolean();
  }
}

export class ClaimBuyTopcornsAndCreatePodOrderCall extends ethereum.Call {
  get inputs(): ClaimBuyTopcornsAndCreatePodOrderCall__Inputs {
    return new ClaimBuyTopcornsAndCreatePodOrderCall__Inputs(this);
  }

  get outputs(): ClaimBuyTopcornsAndCreatePodOrderCall__Outputs {
    return new ClaimBuyTopcornsAndCreatePodOrderCall__Outputs(this);
  }
}

export class ClaimBuyTopcornsAndCreatePodOrderCall__Inputs {
  _call: ClaimBuyTopcornsAndCreatePodOrderCall;

  constructor(call: ClaimBuyTopcornsAndCreatePodOrderCall) {
    this._call = call;
  }

  get topcornAmount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get buyTopcornAmount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get pricePerPod(): i32 {
    return this._call.inputValues[2].value.toI32();
  }

  get maxPlaceInLine(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get claim(): ClaimBuyTopcornsAndCreatePodOrderCallClaimStruct {
    return changetype<ClaimBuyTopcornsAndCreatePodOrderCallClaimStruct>(
      this._call.inputValues[4].value.toTuple()
    );
  }
}

export class ClaimBuyTopcornsAndCreatePodOrderCall__Outputs {
  _call: ClaimBuyTopcornsAndCreatePodOrderCall;

  constructor(call: ClaimBuyTopcornsAndCreatePodOrderCall) {
    this._call = call;
  }

  get id(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class ClaimBuyTopcornsAndCreatePodOrderCallClaimStruct extends ethereum.Tuple {
  get topcornWithdrawals(): Array<BigInt> {
    return this[0].toBigIntArray();
  }

  get lpWithdrawals(): Array<BigInt> {
    return this[1].toBigIntArray();
  }

  get plots(): Array<BigInt> {
    return this[2].toBigIntArray();
  }

  get claimBnb(): boolean {
    return this[3].toBoolean();
  }

  get convertLP(): boolean {
    return this[4].toBoolean();
  }

  get minTopcornAmount(): BigInt {
    return this[5].toBigInt();
  }

  get minBNBAmount(): BigInt {
    return this[6].toBigInt();
  }

  get toWallet(): boolean {
    return this[7].toBoolean();
  }
}

export class ClaimBuyTopcornsAndFillPodListingCall extends ethereum.Call {
  get inputs(): ClaimBuyTopcornsAndFillPodListingCall__Inputs {
    return new ClaimBuyTopcornsAndFillPodListingCall__Inputs(this);
  }

  get outputs(): ClaimBuyTopcornsAndFillPodListingCall__Outputs {
    return new ClaimBuyTopcornsAndFillPodListingCall__Outputs(this);
  }
}

export class ClaimBuyTopcornsAndFillPodListingCall__Inputs {
  _call: ClaimBuyTopcornsAndFillPodListingCall;

  constructor(call: ClaimBuyTopcornsAndFillPodListingCall) {
    this._call = call;
  }

  get l(): ClaimBuyTopcornsAndFillPodListingCallLStruct {
    return changetype<ClaimBuyTopcornsAndFillPodListingCallLStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get topcornAmount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get buyTopcornAmount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get claim(): ClaimBuyTopcornsAndFillPodListingCallClaimStruct {
    return changetype<ClaimBuyTopcornsAndFillPodListingCallClaimStruct>(
      this._call.inputValues[3].value.toTuple()
    );
  }
}

export class ClaimBuyTopcornsAndFillPodListingCall__Outputs {
  _call: ClaimBuyTopcornsAndFillPodListingCall;

  constructor(call: ClaimBuyTopcornsAndFillPodListingCall) {
    this._call = call;
  }
}

export class ClaimBuyTopcornsAndFillPodListingCallLStruct extends ethereum.Tuple {
  get account(): Address {
    return this[0].toAddress();
  }

  get index(): BigInt {
    return this[1].toBigInt();
  }

  get start(): BigInt {
    return this[2].toBigInt();
  }

  get amount(): BigInt {
    return this[3].toBigInt();
  }

  get pricePerPod(): i32 {
    return this[4].toI32();
  }

  get maxHarvestableIndex(): BigInt {
    return this[5].toBigInt();
  }

  get toWallet(): boolean {
    return this[6].toBoolean();
  }
}

export class ClaimBuyTopcornsAndFillPodListingCallClaimStruct extends ethereum.Tuple {
  get topcornWithdrawals(): Array<BigInt> {
    return this[0].toBigIntArray();
  }

  get lpWithdrawals(): Array<BigInt> {
    return this[1].toBigIntArray();
  }

  get plots(): Array<BigInt> {
    return this[2].toBigIntArray();
  }

  get claimBnb(): boolean {
    return this[3].toBoolean();
  }

  get convertLP(): boolean {
    return this[4].toBoolean();
  }

  get minTopcornAmount(): BigInt {
    return this[5].toBigInt();
  }

  get minBNBAmount(): BigInt {
    return this[6].toBigInt();
  }

  get toWallet(): boolean {
    return this[7].toBoolean();
  }
}

export class CreatePodListingCall extends ethereum.Call {
  get inputs(): CreatePodListingCall__Inputs {
    return new CreatePodListingCall__Inputs(this);
  }

  get outputs(): CreatePodListingCall__Outputs {
    return new CreatePodListingCall__Outputs(this);
  }
}

export class CreatePodListingCall__Inputs {
  _call: CreatePodListingCall;

  constructor(call: CreatePodListingCall) {
    this._call = call;
  }

  get index(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get start(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get pricePerPod(): i32 {
    return this._call.inputValues[3].value.toI32();
  }

  get maxHarvestableIndex(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get toWallet(): boolean {
    return this._call.inputValues[5].value.toBoolean();
  }
}

export class CreatePodListingCall__Outputs {
  _call: CreatePodListingCall;

  constructor(call: CreatePodListingCall) {
    this._call = call;
  }
}

export class CreatePodOrderCall extends ethereum.Call {
  get inputs(): CreatePodOrderCall__Inputs {
    return new CreatePodOrderCall__Inputs(this);
  }

  get outputs(): CreatePodOrderCall__Outputs {
    return new CreatePodOrderCall__Outputs(this);
  }
}

export class CreatePodOrderCall__Inputs {
  _call: CreatePodOrderCall;

  constructor(call: CreatePodOrderCall) {
    this._call = call;
  }

  get topcornAmount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get pricePerPod(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get maxPlaceInLine(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class CreatePodOrderCall__Outputs {
  _call: CreatePodOrderCall;

  constructor(call: CreatePodOrderCall) {
    this._call = call;
  }

  get id(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class FillPodListingCall extends ethereum.Call {
  get inputs(): FillPodListingCall__Inputs {
    return new FillPodListingCall__Inputs(this);
  }

  get outputs(): FillPodListingCall__Outputs {
    return new FillPodListingCall__Outputs(this);
  }
}

export class FillPodListingCall__Inputs {
  _call: FillPodListingCall;

  constructor(call: FillPodListingCall) {
    this._call = call;
  }

  get l(): FillPodListingCallLStruct {
    return changetype<FillPodListingCallLStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get topcornAmount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class FillPodListingCall__Outputs {
  _call: FillPodListingCall;

  constructor(call: FillPodListingCall) {
    this._call = call;
  }
}

export class FillPodListingCallLStruct extends ethereum.Tuple {
  get account(): Address {
    return this[0].toAddress();
  }

  get index(): BigInt {
    return this[1].toBigInt();
  }

  get start(): BigInt {
    return this[2].toBigInt();
  }

  get amount(): BigInt {
    return this[3].toBigInt();
  }

  get pricePerPod(): i32 {
    return this[4].toI32();
  }

  get maxHarvestableIndex(): BigInt {
    return this[5].toBigInt();
  }

  get toWallet(): boolean {
    return this[6].toBoolean();
  }
}

export class FillPodOrderCall extends ethereum.Call {
  get inputs(): FillPodOrderCall__Inputs {
    return new FillPodOrderCall__Inputs(this);
  }

  get outputs(): FillPodOrderCall__Outputs {
    return new FillPodOrderCall__Outputs(this);
  }
}

export class FillPodOrderCall__Inputs {
  _call: FillPodOrderCall;

  constructor(call: FillPodOrderCall) {
    this._call = call;
  }

  get o(): FillPodOrderCallOStruct {
    return changetype<FillPodOrderCallOStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get index(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get start(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get amount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get toWallet(): boolean {
    return this._call.inputValues[4].value.toBoolean();
  }
}

export class FillPodOrderCall__Outputs {
  _call: FillPodOrderCall;

  constructor(call: FillPodOrderCall) {
    this._call = call;
  }
}

export class FillPodOrderCallOStruct extends ethereum.Tuple {
  get account(): Address {
    return this[0].toAddress();
  }

  get pricePerPod(): i32 {
    return this[1].toI32();
  }

  get maxPlaceInLine(): BigInt {
    return this[2].toBigInt();
  }
}

export class TransferPlotCall extends ethereum.Call {
  get inputs(): TransferPlotCall__Inputs {
    return new TransferPlotCall__Inputs(this);
  }

  get outputs(): TransferPlotCall__Outputs {
    return new TransferPlotCall__Outputs(this);
  }
}

export class TransferPlotCall__Inputs {
  _call: TransferPlotCall;

  constructor(call: TransferPlotCall) {
    this._call = call;
  }

  get sender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get recipient(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get id(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get start(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get end(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class TransferPlotCall__Outputs {
  _call: TransferPlotCall;

  constructor(call: TransferPlotCall) {
    this._call = call;
  }
}
