// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class BnbClaim extends ethereum.Event {
  get params(): BnbClaim__Params {
    return new BnbClaim__Params(this);
  }
}

export class BnbClaim__Params {
  _event: BnbClaim;

  constructor(event: BnbClaim) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get bnb(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Harvest extends ethereum.Event {
  get params(): Harvest__Params {
    return new Harvest__Params(this);
  }
}

export class Harvest__Params {
  _event: Harvest;

  constructor(event: Harvest) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get plots(): Array<BigInt> {
    return this._event.parameters[1].value.toBigIntArray();
  }

  get topcorns(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class LPClaim extends ethereum.Event {
  get params(): LPClaim__Params {
    return new LPClaim__Params(this);
  }
}

export class LPClaim__Params {
  _event: LPClaim;

  constructor(event: LPClaim) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get withdrawals(): Array<BigInt> {
    return this._event.parameters[1].value.toBigIntArray();
  }

  get lp(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class TopcornAllocation extends ethereum.Event {
  get params(): TopcornAllocation__Params {
    return new TopcornAllocation__Params(this);
  }
}

export class TopcornAllocation__Params {
  _event: TopcornAllocation;

  constructor(event: TopcornAllocation) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get topcorns(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class TopcornClaim extends ethereum.Event {
  get params(): TopcornClaim__Params {
    return new TopcornClaim__Params(this);
  }
}

export class TopcornClaim__Params {
  _event: TopcornClaim;

  constructor(event: TopcornClaim) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get withdrawals(): Array<BigInt> {
    return this._event.parameters[1].value.toBigIntArray();
  }

  get topcorns(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ClaimFacet extends ethereum.SmartContract {
  static bind(address: Address): ClaimFacet {
    return new ClaimFacet("ClaimFacet", address);
  }

  unwrapTopcorns(amount: BigInt): BigInt {
    let result = super.call(
      "unwrapTopcorns",
      "unwrapTopcorns(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(amount)]
    );

    return result[0].toBigInt();
  }

  try_unwrapTopcorns(amount: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "unwrapTopcorns",
      "unwrapTopcorns(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(amount)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  wrappedTopcorns(user: Address): BigInt {
    let result = super.call(
      "wrappedTopcorns",
      "wrappedTopcorns(address):(uint256)",
      [ethereum.Value.fromAddress(user)]
    );

    return result[0].toBigInt();
  }

  try_wrappedTopcorns(user: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "wrappedTopcorns",
      "wrappedTopcorns(address):(uint256)",
      [ethereum.Value.fromAddress(user)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ClaimCall extends ethereum.Call {
  get inputs(): ClaimCall__Inputs {
    return new ClaimCall__Inputs(this);
  }

  get outputs(): ClaimCall__Outputs {
    return new ClaimCall__Outputs(this);
  }
}

export class ClaimCall__Inputs {
  _call: ClaimCall;

  constructor(call: ClaimCall) {
    this._call = call;
  }

  get c(): ClaimCallCStruct {
    return changetype<ClaimCallCStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class ClaimCall__Outputs {
  _call: ClaimCall;

  constructor(call: ClaimCall) {
    this._call = call;
  }

  get topcornsClaimed(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class ClaimCallCStruct extends ethereum.Tuple {
  get topcornWithdrawals(): Array<BigInt> {
    return this[0].toBigIntArray();
  }

  get lpWithdrawals(): Array<BigInt> {
    return this[1].toBigIntArray();
  }

  get plots(): Array<BigInt> {
    return this[2].toBigIntArray();
  }

  get claimBnb(): boolean {
    return this[3].toBoolean();
  }

  get convertLP(): boolean {
    return this[4].toBoolean();
  }

  get minTopcornAmount(): BigInt {
    return this[5].toBigInt();
  }

  get minBNBAmount(): BigInt {
    return this[6].toBigInt();
  }

  get toWallet(): boolean {
    return this[7].toBoolean();
  }
}

export class ClaimAndUnwrapTopcornsCall extends ethereum.Call {
  get inputs(): ClaimAndUnwrapTopcornsCall__Inputs {
    return new ClaimAndUnwrapTopcornsCall__Inputs(this);
  }

  get outputs(): ClaimAndUnwrapTopcornsCall__Outputs {
    return new ClaimAndUnwrapTopcornsCall__Outputs(this);
  }
}

export class ClaimAndUnwrapTopcornsCall__Inputs {
  _call: ClaimAndUnwrapTopcornsCall;

  constructor(call: ClaimAndUnwrapTopcornsCall) {
    this._call = call;
  }

  get c(): ClaimAndUnwrapTopcornsCallCStruct {
    return changetype<ClaimAndUnwrapTopcornsCallCStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ClaimAndUnwrapTopcornsCall__Outputs {
  _call: ClaimAndUnwrapTopcornsCall;

  constructor(call: ClaimAndUnwrapTopcornsCall) {
    this._call = call;
  }

  get topcornsClaimed(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class ClaimAndUnwrapTopcornsCallCStruct extends ethereum.Tuple {
  get topcornWithdrawals(): Array<BigInt> {
    return this[0].toBigIntArray();
  }

  get lpWithdrawals(): Array<BigInt> {
    return this[1].toBigIntArray();
  }

  get plots(): Array<BigInt> {
    return this[2].toBigIntArray();
  }

  get claimBnb(): boolean {
    return this[3].toBoolean();
  }

  get convertLP(): boolean {
    return this[4].toBoolean();
  }

  get minTopcornAmount(): BigInt {
    return this[5].toBigInt();
  }

  get minBNBAmount(): BigInt {
    return this[6].toBigInt();
  }

  get toWallet(): boolean {
    return this[7].toBoolean();
  }
}

export class ClaimBnbCall extends ethereum.Call {
  get inputs(): ClaimBnbCall__Inputs {
    return new ClaimBnbCall__Inputs(this);
  }

  get outputs(): ClaimBnbCall__Outputs {
    return new ClaimBnbCall__Outputs(this);
  }
}

export class ClaimBnbCall__Inputs {
  _call: ClaimBnbCall;

  constructor(call: ClaimBnbCall) {
    this._call = call;
  }
}

export class ClaimBnbCall__Outputs {
  _call: ClaimBnbCall;

  constructor(call: ClaimBnbCall) {
    this._call = call;
  }
}

export class ClaimLPCall extends ethereum.Call {
  get inputs(): ClaimLPCall__Inputs {
    return new ClaimLPCall__Inputs(this);
  }

  get outputs(): ClaimLPCall__Outputs {
    return new ClaimLPCall__Outputs(this);
  }
}

export class ClaimLPCall__Inputs {
  _call: ClaimLPCall;

  constructor(call: ClaimLPCall) {
    this._call = call;
  }

  get withdrawals(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }
}

export class ClaimLPCall__Outputs {
  _call: ClaimLPCall;

  constructor(call: ClaimLPCall) {
    this._call = call;
  }
}

export class ClaimTopcornsCall extends ethereum.Call {
  get inputs(): ClaimTopcornsCall__Inputs {
    return new ClaimTopcornsCall__Inputs(this);
  }

  get outputs(): ClaimTopcornsCall__Outputs {
    return new ClaimTopcornsCall__Outputs(this);
  }
}

export class ClaimTopcornsCall__Inputs {
  _call: ClaimTopcornsCall;

  constructor(call: ClaimTopcornsCall) {
    this._call = call;
  }

  get withdrawals(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }
}

export class ClaimTopcornsCall__Outputs {
  _call: ClaimTopcornsCall;

  constructor(call: ClaimTopcornsCall) {
    this._call = call;
  }
}

export class HarvestCall extends ethereum.Call {
  get inputs(): HarvestCall__Inputs {
    return new HarvestCall__Inputs(this);
  }

  get outputs(): HarvestCall__Outputs {
    return new HarvestCall__Outputs(this);
  }
}

export class HarvestCall__Inputs {
  _call: HarvestCall;

  constructor(call: HarvestCall) {
    this._call = call;
  }

  get plots(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }
}

export class HarvestCall__Outputs {
  _call: HarvestCall;

  constructor(call: HarvestCall) {
    this._call = call;
  }
}

export class RemoveAndClaimLPCall extends ethereum.Call {
  get inputs(): RemoveAndClaimLPCall__Inputs {
    return new RemoveAndClaimLPCall__Inputs(this);
  }

  get outputs(): RemoveAndClaimLPCall__Outputs {
    return new RemoveAndClaimLPCall__Outputs(this);
  }
}

export class RemoveAndClaimLPCall__Inputs {
  _call: RemoveAndClaimLPCall;

  constructor(call: RemoveAndClaimLPCall) {
    this._call = call;
  }

  get withdrawals(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }

  get minTopcornAmount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get minBNBAmount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class RemoveAndClaimLPCall__Outputs {
  _call: RemoveAndClaimLPCall;

  constructor(call: RemoveAndClaimLPCall) {
    this._call = call;
  }
}

export class UnwrapTopcornsCall extends ethereum.Call {
  get inputs(): UnwrapTopcornsCall__Inputs {
    return new UnwrapTopcornsCall__Inputs(this);
  }

  get outputs(): UnwrapTopcornsCall__Outputs {
    return new UnwrapTopcornsCall__Outputs(this);
  }
}

export class UnwrapTopcornsCall__Inputs {
  _call: UnwrapTopcornsCall;

  constructor(call: UnwrapTopcornsCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UnwrapTopcornsCall__Outputs {
  _call: UnwrapTopcornsCall;

  constructor(call: UnwrapTopcornsCall) {
    this._call = call;
  }

  get topcornsToWallet(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class WrapTopcornsCall extends ethereum.Call {
  get inputs(): WrapTopcornsCall__Inputs {
    return new WrapTopcornsCall__Inputs(this);
  }

  get outputs(): WrapTopcornsCall__Outputs {
    return new WrapTopcornsCall__Outputs(this);
  }
}

export class WrapTopcornsCall__Inputs {
  _call: WrapTopcornsCall;

  constructor(call: WrapTopcornsCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class WrapTopcornsCall__Outputs {
  _call: WrapTopcornsCall;

  constructor(call: WrapTopcornsCall) {
    this._call = call;
  }
}
